---


########
# Configure DNS resolution

- name: Resolver configuration
  when: resolver_domain is defined or resolver_search is defined or resolver_nameservers is defined
  include_tasks: "resolver.yml"

########
# Configure hostname

- name: Configure hostname
  when: "update_hostname | default(false)"
  hostname:
    name: "{{ inventory_hostname }}"

########
# SELinux configuration

- name: Disable SELinux (Config) (CentOS)
  lineinfile:
    path: /etc/selinux/config
    regexp: "^SELINUX="
    line: "SELINUX=permissive"
    state: present
  when: ansible_distribution == "CentOS"

- name: Disable SELinux (Oper) (CentOS)
  command: /sbin/setenforce 0
  when: ansible_distribution == "CentOS"

##
# Install packages

- name: Microsoft Ubuntu signing key install (Ubuntu)
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Install PowerShell Repo (Ubuntu)
  apt:
    deb: https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
  when: ansible_distribution == "Ubuntu"

- name: Update Apt cache
  apt:
    update_cache: yes
  ignore_errors: true
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: Install Packages (Ubuntu)
  apt:
    state: present
    name:
      - curl
      - rsync
      - software-properties-common
      - python3
      - apt-transport-https
      - ca-certificates
      - parted
      - lsof
      - git
      - vim
      - screen
      - open-vm-tools
      - sudo
      - zfsutils-linux
      - powershell
      - netscript-ipfilter
  when: ansible_distribution == "Ubuntu"

- name: Install Packages (CentOS)
  yum:
    state: present
    name:
      - curl
      - rsync
      - lsof
      - vim
      - screen
      - sudo
      - open-vm-tools
  when: ansible_distribution == "CentOS"

##
# Remove packages

- name: Remove Packages
  package:
    state: absent
    name:
      - cloud-init

##
# Base Firewall configuration
- name: Iptables configuration
  include_tasks: iptables.yml

##
# Sudoers configuration

- name: Sudoers configuration
  include_tasks: sudoers.yml

##
# SSH Configuration

- name: sshd configuration
  include_tasks: sshd.yml

########
# Timezone configuration

- name: Set timezone
  timezone:
    name: "{{ timezone }}"
  when: "timezone is defined"

########
# VM Tools Configuration

- name: Enable open-vm-tools service (Ubuntu)
  service:
    name: open-vm-tools
    enabled: yes
  when: ansible_distribution == "Ubuntu"

- name: Enable open-vm-tools service (CentOS)
  service:
    name: vmtoolsd
    enabled: yes
  when: ansible_distribution == "CentOS"

########
# Time synchronisation

- name: Time synchronisation
  include_tasks: ntpd.yml
  when: time_sources is defined

########
# Vim Configuration

- name: Vim Configuration Global
  copy:
    dest: /etc/vim/vimrc.local
    src: vimrc.local
    owner: root
    group: root
    mode: "0644"

##
# Screen Configuration

- name: Configure screen
  copy:
    src: screenrc
    dest: /etc/screenrc
    owner: root
    group: root
    mode: "0644"

########
# Configure user accounts

- name: Configure admin user accounts
  user:
    name: "{{ item }}"
    create_home: yes
    append: true
    group: "{{ item }}"
    groups: sudo,wheel,remotessh,npwsudo
    shell: /bin/bash
    state: present
  loop: "{{ admin_users }}"
  when: admin_users is defined

- name: Configure trusted keys
  with_dict: "{{ trusted_keys }}"
  when: trusted_keys is defined
  include_tasks: "{{ playbook_dir }}/lib/trustedkeys.yml"
  vars:
    user: "{{ item.key }}"
    user_keys: "{{ item.value }}"

...
